@page "/Login"
@inject NavigationManager Navigation
@inject HttpClient Http
@inject LoginService LoginService

<!DOCTYPE html>
<html>
<head>
    <style>
        p {color: red;}
    </style>
</head>
<body>
<div class="container mt-3">

    <form>
        @if (msgInvalido == true)
        {
            <p>Usuário ou senha incorreta</p>
        }

        <label for="Username">Usuário: </label>
        <input type="text" class="form-control w-25" @bind="username" id="Username" name="Username"> <br>

        <label for="Password">Senha: </label>
        <input type="password" class="form-control w-25" @bind="password" id="Password" name="Password"> <br><br>

        <button type="button" class="btn btn-primary" @onclick="ValidarLogin">Logar</button>
    </form>

</div>
</body>
</html>

@code
{
    private string? username;
    private string? password;
    private bool msgInvalido = false;

    public List<User>? users { get; set; } = new List<User>();

    private void ValidarLogin()
    {
        foreach (var item in users)
        {
            if(item.Username == username && item.Password == password)
            {
                LoginService.Logado = true;
                LoginService.User = username;
                LoginService.Id = item.Id;
                LoginService.Password = password;
                Navigation.NavigateTo("/Books");
            }
            else
            {
                msgInvalido = true;
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        users = await Http.GetFromJsonAsync<List<User>?>("user");
    }

    public class User
    {
        public int Id { get; set; }
        public string Username { get; set; }
        public string Password { get; set; }
    }
}